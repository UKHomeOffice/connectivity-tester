eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiMKIyAgdGVzdDoKIyAgICBpbWFnZTogZ29sYW5nOjEuOQojICAgIGNvbW1hbmRzOgojICAgICAgLSBnbyBnZXQgZ2l0aHViLmNvbS9zdHJldGNoci90ZXN0aWZ5CiMgICAgICAtIGdvIHRlc3QgLXYKIwojICBidWlsZDoKIyAgICBpbWFnZTogZ29sYW5nOjEuOQojICAgIGNvbW1hbmRzOgojICAgICAgLSBHT09TPXdpbmRvd3MgR09BUkNIPWFtZDY0IGdvIGJ1aWxkIC1hIC1sZGZsYWdzICctZXh0bGRmbGFncyAiLXN0YXRpYyInIC1vIGNvbm5lY3Rpdml0eS10ZXN0ZXItd2luZG93cy1hbWQ2NC5leGUKIyAgICAgIC0gR09PUz1saW51eCAgIEdPQVJDSD1hbWQ2NCBnbyBidWlsZCAtYSAtbGRmbGFncyAnLWV4dGxkZmxhZ3MgIi1zdGF0aWMiJyAtbyBjb25uZWN0aXZpdHktdGVzdGVyLWxpbnV4LWFtZDY0CiMgICAgICAtIEdPT1M9ZGFyd2luICBHT0FSQ0g9YW1kNjQgZ28gYnVpbGQgLWEgLWxkZmxhZ3MgJy1leHRsZGZsYWdzICItc3RhdGljIicgLW8gY29ubmVjdGl2aXR5LXRlc3Rlci1kYXJ3aW4tYW1kNjQKIwojICBnaXRodWJfcmVsZWFzZToKIyAgICBpbWFnZTogcGx1Z2lucy9naXRodWItcmVsZWFzZQojICAgIGFwaV9rZXk6ICR7R0lUSFVCX1RPS0VOfQojICAgIGZpbGVzOgojICAgICAgLSBjb25uZWN0aXZpdHktdGVzdGVyLXdpbmRvd3MtYW1kNjQuZXhlCiMgICAgICAtIGNvbm5lY3Rpdml0eS10ZXN0ZXItbGludXgtYW1kNjQKIyAgICAgIC0gY29ubmVjdGl2aXR5LXRlc3Rlci1kYXJ3aW4tYW1kNjQKIyAgICBjaGVja3N1bToKIyAgICAgIC0gbWQ1CiMgICAgICAtIHNoYTEKIyAgICAgIC0gc2hhMjU2CiMgICAgICAtIHNoYTUxMgojICAgICAgLSBhZGxlcjMyCiMgICAgICAtIGNyYzMyCiMgICAgd2hlbjoKIyAgICAgIGV2ZW50OiB0YWcKIwojIyMjIyMgRE9DS0VSCiMKIyAgZG9ja2VyLWJ1aWxkOgojICAgIHByaXZpbGVnZWQ6IHRydWUKIyAgICBpbWFnZTogZG9ja2VyOjEuMTIKIyAgICBlbnZpcm9ubWVudDoKIyAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKIyAgICBjb21tYW5kczoKIyAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9jb25uZWN0aXZpdHktdGVzdGVyOiR7RFJPTkVfQ09NTUlUX1NIQX0gLgojCiMgIGltYWdlX3RvX3F1YXk6CiMgICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiMgICAgZW52aXJvbm1lbnQ6CiMgICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiMgICAgY29tbWFuZHM6CiMgICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtjb25uZWN0aXZpdHlfdGVzdGVyIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwojICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY29ubmVjdGl2aXR5LXRlc3Rlcjoke0RST05FX0NPTU1JVF9TSEF9CiMgICAgd2hlbjoKIyAgICAgIGJyYW5jaDogbWFzdGVyCiMgICAgICBldmVudDogcHVzaAojCiMjIyMjIyBQQUNLRVIgYnVpbGRzCiMKIyAgbGludXgtcGFja2VyLXZhbGlkYXRlOgojICAgIGltYWdlOiBjaHJpc25zL3BhY2tlci1hbnNpYmxlCiMgICAgY29tbWFuZHM6CiMgICAgICAtIGV4cG9ydCBIT01FPS9ob21lL3BhY2tlcgojICAgICAgLSBwYWNrZXIgdmFsaWRhdGUgcGFja2VyLmpzb24KIwojICBsaW51eC1wYWNrZXItaW5zcGVjdDoKIyAgICBpbWFnZTogY2hyaXNucy9wYWNrZXItYW5zaWJsZQojICAgIGNvbW1hbmRzOgojICAgICAgLSBleHBvcnQgSE9NRT0vaG9tZS9wYWNrZXIKIyAgICAgIC0gcGFja2VyIGluc3BlY3QgcGFja2VyLmpzb24KIwojICBsaW51eC1wYWNrZXItYnVpbGQ6CiMgICAgaW1hZ2U6IGNocmlzbnMvcGFja2VyLWFuc2libGUKIyAgICBjb21tYW5kczoKIyAgICAgIC0gZXhwb3J0IEhPTUU9L2hvbWUvcGFja2VyCiMgICAgICAtIHBhY2tlciBidWlsZCBwYWNrZXIuanNvbgojICAgIHdoZW46CiMgICAgICBldmVudDogcHVzaAojICAgICAgYnJhbmNoOiBtYXN0ZXIKCiMjIyMjIFBBQ0tFUiBjb3BpZXMKCiAgcGFja2VyLWNvcHktcHJvZDoKICAgIGltYWdlOiBjaHJpc25zL3BhY2tlci1lbmNyeXB0LWNvcHkKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIGV4cG9ydCBmaWx0ZXJzPSItLW93bmVyIDA5MzQwMTk4MjM4OCAtLWZpbHRlcnMgIk5hbWU9bmFtZSxWYWx1ZXM9Y29ubmVjdGl2aXR5KiIiCiAgICAgIC0gZXhwb3J0IGF3c19pZD0ke1BST0RfQUNDX0lEfQogICAgICAtIGV4cG9ydCBhd3Nfa2V5PSR7UFJPRF9BQ0NfS0VZfQogICAgICAtIGV4cG9ydCBBV1NfQUNDRVNTX0tFWV9JRD0ke1BST0RfQUNDX0lEfQogICAgICAtIGV4cG9ydCBBV1NfU0VDUkVUX0FDQ0VTU19LRVk9JHtQUk9EX0FDQ19LRVl9CiAgICAgIC0gZXhwb3J0IHJlZ2lvbj1ldS13ZXN0LTIKICAgICAgLSBleHBvcnQgSE9NRT0vaG9tZS9wYWNrZXIKICAgICAgLSBjZCAvaG9tZS9wYWNrZXIKICAgICAgLSAuL2J1aWxkLnNoCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICBwYWNrZXItY29weS1ub3Rwcm9kOgogICAgaW1hZ2U6IGNocmlzbnMvcGFja2VyLWVuY3J5cHQtY29weQogICAgcHVsbDogdHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gZXhwb3J0IGZpbHRlcnM9Ii0tb3duZXIgMDkzNDAxOTgyMzg4IC0tZmlsdGVycyAiTmFtZT1uYW1lLFZhbHVlcz1jb25uZWN0aXZpdHkqIiIKICAgICAgLSBleHBvcnQgYXdzX2lkPSR7Tk9UUFJPRF9BQ0NfSUR9CiAgICAgIC0gZXhwb3J0IGF3c19rZXk9JHtOT1RQUk9EX0FDQ19LRVl9CiAgICAgIC0gZXhwb3J0IHJlZ2lvbj1ldS13ZXN0LTIKICAgICAgLSBleHBvcnQgSE9NRT0vaG9tZS9wYWNrZXIKICAgICAgLSBjZCAvaG9tZS9wYWNrZXIKICAgICAgLSAuL2J1aWxkLnNoCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICBwYWNrZXItY29weS1tb2NrczoKICAgIGltYWdlOiBjaHJpc25zL3BhY2tlci1lbmNyeXB0LWNvcHkKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIGV4cG9ydCBmaWx0ZXJzPSItLW93bmVyIDA5MzQwMTk4MjM4OCAtLWZpbHRlcnMgIk5hbWU9bmFtZSxWYWx1ZXM9Y29ubmVjdGl2aXR5KiIiCiAgICAgIC0gZXhwb3J0IGF3c19pZD0ke01PQ0tfQUNDX0lEfQogICAgICAtIGV4cG9ydCBhd3Nfa2V5PSR7TU9DS19BQ0NfS0VZfQogICAgICAtIGV4cG9ydCByZWdpb249ZXUtd2VzdC0yCiAgICAgIC0gZXhwb3J0IEhPTUU9L2hvbWUvcGFja2VyCiAgICAgIC0gY2QgL2hvbWUvcGFja2VyCiAgICAgIC0gLi9idWlsZC5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBtYXN0ZXIKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTItZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXki.HBsqwmX2B4oTJYgdluhdAJlBe5u_qc3SWo3SD72ZwZw